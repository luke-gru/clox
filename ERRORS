Errors in lox (throwing/catching)
=================================

** Brainstorm

- Errors in lox should only affect current thread if current thread isn't main
- Throwing an error should only unwind stack after it's found the catch, in
  the VM loop
- If no catch is found, a base 'rootJumpBuf' should be set to unwind the whole
  stack, print the error and exit (if main thread).
- vm.stackObjects should be updated as needed so that no objects are GC'd
  prematurely

** Error throwing internals

- throwError(), if tag is found for the error type, should jump to that tag
- throwError(), if tag is found, but not for the error type, should jump to
  that tag, delete the tag, then jump again.
- throwError(), if no tag is found and a catch row is found, should jump to
  the nearest vm_run() for the function that has the catch table. Upon CATCH
  instruction, unwind and handling happens.
- throwError(), if no tag and no catch row is found, jumps to first vm_run
  jump buf, prints error and exits interpret() function.

** Open questions/concerns

- when is vm.lastErrorThrown cleared, if ever?
- When is vm.exited set to true?
- when is vm.hadError set to true?
- when is vm.errInfo NULL and when is it not?
- Throwing from C functions versus throwing from the VM, what exactly are the
  differences and what do we need to do to make it work properly internally?
- Throwing from eval() must work properly.
- Throwing from compilation/parsing (SyntaxError) must work properly. VM must
  be initialized.

** How it works

- vm_run() first run, set error jmpbuf (or tag!?)
- throw from VM code, jumps to tag or catch row (or jmpbuf if no tag)
- throw from VM code with catch, look at jump table, throw to vm_run where
  jmpbuf was set, continue in OP_CATCH with new PC set

  ex:
    try {
      throw Error("OMG");
    } catch (Error) {
      ...
    }

** Improvements

- Get parser and compiler to output error messages to ObjStrings instead of
  stdout/stderr, so we can silence the output if we catch the error.
- Add vm_protect to loadScript and requireScript
