var stop = false;
Signal.trap(Signal::QUIT, fun() {
  print "In signal handler";
  stop = true;
});

// test that signal handler functions get marked during GC and are not collected
GC.collect();
GC.collect();

var childPid = Process.fork(fun() {
  sleep(2);
  print "Signalling from child";
  Process.signal(Process.ppid(), Signal::QUIT);
});

print "Looping in parent";
while (stop == false) {
}
print "Loop stopped";

// NOTE: vm.printBuf doesn't work for subprocesses right now, so "Signalling from
// child" doesn't get output in printBuf
__END__
-- expect: --
Looping in parent
In signal handler
Loop stopped
